body {
  margin: 0;
  display: flex;
  justify-content: center;
  align-items: flex-start;
  padding-top: 50px;
  box-sizing: border-box;
  background-color: #f0f2f5;
}

.container {
  background-color: white;
  width: 500px;
  padding: 30px 40px;
  border-radius: 10px;
  text-align: center;
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
}

h1 {
  color: #4a90e2;
  font-size: 2.2em;
  margin-bottom: 30px;
}
/*em 단위: 해당 요소 부모의 font-size에 상대적으로 크기가 변경
  em 사용시, 폰트 크기가 부모로부터 자식에게 계속 상속 누적
  특정 구성 요소 (컴포넌트) 내에서만 크기를 비례적으로 조절하고 싶을 때 유용 */

/*rem 단위: 루트 즉, html 태그의 font-size에 상대적
  rem은 항상 루트 요소의 폰트 크기를 기준으로 하므로, 
  중첩된 요소에서도 크기 계산이 훨씬 예측이 쉽고 일관적 
  웹페이지 전체의 기본 폰트 크기를 html에서 한 번만 변경시,
  rem으로 사용하는 모든 요소의 크기가 비례적으로 조정*/

/*em: 컴포넌트 내부의 요소간 상대적인 크기 ex.) padding, margin
  rem: 전역적인 폰트 크기, 주요 레이아웃 요소의 크기 ex.) width, height, padding, margin */

.input-area {
  display: flex;
  gap: 10px; /*새로운 할 일을 입력하세요 와 추가 의 사이를 띄워줌 (space-between이 필요 없음)*/
}

#todoInput {
  flex-grow: 1; /*남은 공간을 다 차지하게 설정하는 속성 (굳이 width랑 height가 필요 없음)*/
  outline: none;
  border-radius: 5px;
  border: 1px solid #ddd;
  padding: 12px 25px; /*패딩으로 글씨 시작점을 조정*/
  font-size: 1em;
  transition: border-color 0.3s ease;
}

#todoInput:focus {
  border-color: #4a90e2;
}

#addTodoBtn {
  padding: 12px 25px;
  font-size: 1em;
  border: none;
  border-radius: 5px;
  background-color: #4a90e2;
  color: white;
  cursor: pointer; /*누를 때마다 손가락 표시로 바뀌는 속성*/
  transition: background-color 0.3s ease, transform 0.1s ease;
}

#addTodoBtn:hover {
  background-color: #357bd8;
  transform: translateY(-2px);
}

#addTodoBtn:active {
  /*active: 눌려진 상태 (누르고 뗀 상태X) */
  transform: translateY(0);
}

::placeholder {
  /*#todoInput::placehorder 라고 적어도 무방*/
  color: #ddd;
}
